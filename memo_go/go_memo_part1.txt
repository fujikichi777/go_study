command+fあるいはctrl+fで知りたいことを検索できます
https://go-tour-jp.appspot.com/welcome/1
で学んだことをまとめてみました
-------------------------------------------------------
タイトル:パッケージ

文法:
package パッケージ名

意味:
そのプログラムのパッケージの名前を宣言する。
パッケージとはあるプログラムについている名前のようなものである。

例:
package hello_world

-------------------------------------------------------
タイトル:インポート

文法:import(
            "パッケージ名1"
            "パッケージ名2"
            ...)
意味:
この文法が書かれたプログラムにパッケージ名1,パッケージ名2,...をインポートする。
インポートとは”取り入れる”という意味で、あるプログラムAにパッケージがインポート
されることでそのプログラム内でパッケージで宣言されたあらゆる関数、変数、構造体を使える。

例:
import(
    "fmt"
    "time"
        )
-------------------------------------------------------
タイトル:変数の宣言

文法:
var 変数名　変数の型

意味:
”変数の型”型の変数”変数名”を宣言する。わかりづらいので例1の
場合で考えてみるとint型の変数iを宣言するという意味である。例2の場合は
string型の変数sを宣言するとなる。

例1:
var i int

例2:
var s string
-------------------------------------------------------
タイトル:変数の代入

文法:
変数名 = 変数名または変数名の演算

意味:
”変数名”に”変数名”を代入する。例1の場合は変数aに変数bを代入するという意味である。
例2の場合は変数aに変数bに1を加算したものを代入という意味である。左辺と右辺で型が異なると
エラーになる。

例1:
a = b

例2:
a = b+1
-------------------------------------------------------
タイトル:関数の宣言

文法:
func 関数名（引数名　引数の型）返り値の型{
    操作
    return 返り値
}

意味:
引数が”引数の型”型の”引数名”であり、返り値が”返り値の型”型の”返り値”である関数"関数名"を宣言する。
わかりにくいので例1の場合だと引数がint型のa、返り値がint型のbである関数add1を宣言するという意味である。
関数は引数を受け取り操作を実行して返り値を返す。例2のように操作、引数、返り値がなくてもよい。例3のように
引数が複数あってもよい。例3を例4と略記できる。例5のように返り値が2つあってもよい。（この場合数学における関数の定義とは異なる）
例6のように返り値の型と返り値を同時に書いてもよい。

例1:
func add1 (a int) int{
    int b
    b = a+1
    return b
}

例2:
func nothing(){
    return
}

例3:
func add(x int, y int) int {
	return x + y
}

例4:
func add(x, y int) int {
	return x + y
}

例5:
func swap(x, y string) (string, string) {
	return y, x
}

例6:
func split(sum int) (x, y int) {
	x = sum * 4 / 9
	y = sum - x
	return
}

-------------------------------------------------------
タイトル:main関数

文法:
func main（）{
    操作
}

意味:
引数も返り値もないmain関数を宣言する。通常関数を宣言しただけでは実行はされないが
main関数は特殊であり、宣言すただけで{}内の操作が実行される。main関数はreturn
を書かなくてよい。

例:
func main（）{
    
}
-------------------------------------------------------
タイトル:インポートしたものを使う(変数編)

文法:
パッケージ名.変数名

意味:
”パッケージ名”内の変数”関数名”を使う。

例:
math.Pi
-------------------------------------------------------
タイトル:インポートしたものを使う(関数編)

文法:
パッケージ名.関数名

意味:
”パッケージ名”内の関数”関数名”を使う。例1の場合fmt内の関数Println
を使うという意味である。パッケージをインポートして使う関数は大文字である。

例1:
fmt.Println("hello world")

例2:
fmt.Println(time.Now())

例3:
rand.Intn(10)

補足:
具体的な関数の意味についてはここでは述べないが別のメモで追加するかも知れない。
どうしても知りたいならgoの公式ドキュメント(https://golang.org/pkg/パッケージ名/)を参照して欲しい
-------------------------------------------------------